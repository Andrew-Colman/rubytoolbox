# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
       - image: circleci/ruby:2.6.0-node-browsers

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle && yarn install

      # Save build cache
      - save_cache:
          paths:
            - ./vendor/bundle
            - ./node_modules
          key: dependencies-{{ checksum "Gemfile.lock" }}

      - save_cache:
          paths: ~/repo
          key: checkout-{{ .Environment.CIRCLE_SHA1 }}

  test:
    working_directory: ~/repo

    docker:
       - image: circleci/ruby:2.6.0-node-browsers
       - image: circleci/postgres:10.6-alpine-ram
         environment:
           POSTGRES_USER: root
           POSTGRES_DB: test
       - image: circleci/redis:latest

    environment:
      DATABASE_URL: "postgresql://root@localhost/test"
      RAILS_ENV: test

    steps:
      - restore_cache:
          keys:
          - checkout-{{ .Environment.CIRCLE_SHA1 }}

      - run: sudo apt install -y postgresql-client || true
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle && yarn install
      - run: bundle exec rake db:structure:load
      - run:
          name: run tests
          command: |
            mkdir -p /tmp/rspec/test-results
            bundle exec rspec --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec/results.xml \
                              --format documentation

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - store_artifacts:
          path: ./coverage
          destination: coverage

workflows:
  version: 2
  test:
    jobs:
      - build
      - test:
          requires:
            - build
